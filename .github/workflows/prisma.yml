name: Prisma Migrations

on: [push]

jobs:
  local:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install dependencies
        run: |
          npm ci
      - name: prisma validate
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          npm run prisma validate
      - name: prisma migrate deploy Empty DB
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          npm run prisma migrate deploy
  neon:
    runs-on: ubuntu-latest
    # not on main branch
    if: github.ref != 'refs/heads/main'
    # Service containers to run with `container-job`
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install dependencies
        run: |
          npm ci
      - name: Create Neon branch
        id: neon
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
          NEON_PROJECT_ID: ${{ vars.NEON_PROJECT_ID }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: npm run neon:create-branch

      - name: prisma migrate deploy on branch
        env:
          DATABASE_URL: ${{ steps.neon.outputs.DATABASE_URL }}
        run: |
          npm run prisma migrate deploy
